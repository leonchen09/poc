<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.station.moudles.mapper.RolesMapper">
	<resultMap id="BaseResultMap" type="com.station.moudles.entity.Roles">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_id" property="createId" jdbcType="INTEGER" />
		<result column="create_name" property="createName" jdbcType="VARCHAR" />
		<result column="role_system" property="roleSystem" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		role_id, role_name, create_time,
		create_id, create_name, role_system
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from roles
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	
	<select id="selectListSelective" resultMap="BaseResultMap" parameterType="com.station.moudles.entity.Roles">
		select
		<include refid="Base_Column_List"/>
		from roles
		<where>
			<if test="roleId != null">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="roleName != null">
				and role_name = #{roleName,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createId != null">
				and create_id = #{createId,jdbcType=INTEGER}
			</if>
			<if test="createName != null">
				and create_name = #{createName,jdbcType=VARCHAR}
			</if>
			<if test="roleSystem != null">
				and role_system = #{roleSystem,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<select id="selectListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select r.*
		from user_role
		inner join  
			roles r on user_role.role_id = r.role_id
		where user_role.user_id = #{userId,jdbcType=INTEGER};
	</select>
	
	<select id="selectListSelectivePaging" resultMap="BaseResultMap" parameterType="com.station.moudles.vo.search.PageEntity">
		select
		<include refid="Base_Column_List" />
		from roles
		<where>
			<if test="roleId != null">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="roleName != null">
				and role_name like "%${roleName}%"
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createId != null">
				and create_id = #{createId,jdbcType=INTEGER}
			</if>
			<if test="createName != null">
				and create_name = #{createName,jdbcType=VARCHAR}
			</if>
			<if test="roleSystem != null">
				and role_system = #{roleSystem,jdbcType=INTEGER}
			</if>
		</where>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from roles
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteByPKs" parameterType="java.lang.Integer">
		delete from roles
		where
		<foreach collection="array" index="index" separator="or" item="item">
			role_id = #{item,jdbcType=INTEGER}
		</foreach>
	</delete>
	
	<delete id="deleteSelective" parameterType="com.station.moudles.entity.Roles">
		delete from roles
		<where>
			<if test="roleId != null">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="roleName != null">
				and role_name = #{roleName,jdbcType=VARCHAR}
			</if>
			<if test="createTime != null">
				and create_time = #{createTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createId != null">
				and create_id = #{createId,jdbcType=INTEGER}
			</if>
			<if test="createName != null">
				and create_name = #{createName,jdbcType=VARCHAR}
			</if>
			<if test="roleSystem != null">
				and role_system = #{roleSystem,jdbcType=INTEGER}
			</if>
		</where>
	</delete>

	<insert id="insert" parameterType="com.station.moudles.entity.Roles">
		insert into roles (role_id,
		role_name, create_time,
		create_id, create_name, role_system
		)
		values
		(#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{createId,jdbcType=INTEGER},
		#{createName,jdbcType=VARCHAR}, #{roleSystem,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.station.moudles.entity.Roles">
		insert into roles
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createName != null">
				create_name,
			</if>
			<if test="roleSystem != null">
				role_system,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=INTEGER},
			</if>
			<if test="createName != null">
				#{createName,jdbcType=VARCHAR},
			</if>
			<if test="roleSystem != null">
				#{roleSystem,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.station.moudles.entity.Roles">
		update roles
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=INTEGER},
			</if>
			<if test="createName != null">
				create_name = #{createName,jdbcType=VARCHAR},
			</if>
			<if test="roleSystem != null">
				role_system = #{roleSystem,jdbcType=INTEGER},
			</if>
		</set> 
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.station.moudles.entity.Roles">
		update roles set 
		role_name = #{roleName,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_id = #{createId,jdbcType=INTEGER},
		create_name = #{createName,jdbcType=VARCHAR},
		role_system = #{roleSystem,jdbcType=INTEGER}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
</mapper>