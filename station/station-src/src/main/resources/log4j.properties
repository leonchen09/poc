### set log levels - for more verbose logging change 'info' to 'debug' ###
log4j.rootLogger=debug, stdout, file
log4j.addivity.org.apache = true 

###输出到控制台###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.Threshold = debug
##Target=System.err 默认情况下是：System.out,指定输出控制台 
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[station]%d{[yyyy-MM-dd HH:mm:ss]} %5p %c{1}:%L - %m%n

log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender  
log4j.appender.FILE.Append=true  
log4j.appender.FILE.File=../logs/log4j.log
log4j.appender.FILE.Threshold=warn  
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout  
log4j.appender.FILE.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n  

### 输出到 error.log 文件中  ###
###文件大小到达指定尺寸的时候产生一个新的文件###
#log4j.appender.error=org.apache.log4j.RollingFileAppender
###Threshold=ERROR 指定日志消息的输出最低层次
#log4j.appender.error.Threshold=ERROR
###log4j.appender.file.File=${catalina.base}/logs/order.log
#log4j.appender.error.File=${catalina.base}/logs/dealer_error/error.log
#log4j.appender.error.layout=org.apache.log4j.PatternLayout
#log4j.appender.error.layout.ConversionPattern=[station]%d{[yyyy-MM-dd HH:mm:ss]} %5p %c{1}:%L - %m%n

##Append =false指将消息覆盖指定的文件内容##
log4j.appender.error.Append = true   
##在日志文件到达该大小时，将会自动滚动，即将原来的内容移到mylog.log.1文件
log4j.appender.error.MaxFileSize = 1024KB  
##MaxBackupIndex=2指定可以产生的滚动文件的最大数    
log4j.appender.error.MaxBackupIndex = 10 

### 输出到logic.log 文件中 ###
##log4j.logger.cn.vesung=debug, logic
###每天产生一个日志文件###
#log4j.appender.logic=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.logic.Threshold=DEBUG
###log4j.appender.file.File=${catalina.base}/logs/order.log
#log4j.appender.logic.File=${catalina.base}/logs/dealer_info/logic.log
#log4j.appender.logic.layout=org.apache.log4j.PatternLayout
#log4j.appender.logic.layout.ConversionPattern=[station]%d{[yyyy-MM-dd HH:mm:ss]} %5p %c{1}:%L - %m%n
#log4j.appender.logic.Append = true

log4j.logger.org.springframework=info

#mybatis执行日志输出
#log4j.logger.java.sql.Connection=debug
#log4j.logger.java.sql.Statement=info
#log4j.logger.java.sql.PreparedStatement=debug
#log4j.logger.net.rubyeye.xmemcached = info
#log4j.logger.com.google.code.yanf4j = info
#log4j.logger.org.quartz.core=info
#log4j.logger.springfox.documentation=info

#数据库连接池日志输出。
log4j.logger.druid.sql=debug
log4j.logger.druid.sql.DataSource=debug
log4j.logger.druid.sql.Connection=warn
log4j.logger.druid.sql.Statement=warn
log4j.logger.druid.sql.ResultSet=warn

